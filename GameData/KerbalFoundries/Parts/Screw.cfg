PART
{
name = KF_ScrewDrive
module = Part
author = Model Spanner, concept cfg Lo-Fi

MODEL
{
	model = KerbalFoundries/Assets/Screw
}

node_stack_001 = 0.545, 0.38, 0.0, 1.0, 0.0, 0.0, 0
node_attach = 0.545, 0.38, 0.0, 1.0, 0.0, 0.0

TechRequired = advancedMotors
entryCost = 10000
cost = 1000
category = Utility
subcategory = 0
title = KF Screw Drive
manufacturer = SM Solutions for Kerbal Foundries
description = Dubbed the HypnoDrive by those fortunate enough to use it and survive it hypnotic charms, this alternate mode of amphibious tpropulsion comes in handy when wheels are just plain.... boring!

attachRules = 1,1,0,1,1

mass = 1.25
dragModelType = default
maximum_drag = 0.3
minimum_drag = 0.2
angularDrag = 1
maxTemp = 1200 

crashTolerance = 1200
breakingForce = 1200
breakingTorque = 1200

MODULE
{
	name = KFModuleMirror
	rightObjectName = LinkRight
	leftObjectName = LinkLeft
}

MODULE
{
	name = KFModuleWheel
	tweakScaleCorrector = 1
	raycastError = 0.0
	springRate = 0.8
	damperRate = 0.05
	torqueCurve
	{
		key = 0 90
		key = 10 80
		key = 15 0
	}
	steeringCurve
	{
		key = 0 0
	}
	torqueSteeringCurve
	{
		key = 0 60
		key = 10 0
	}
	brakeSteeringCurve
	{
		key = -25 -240
		key = -10 -120
		key = 0 0
		key = 10 120
		key = 25 240
	}
	rollingResistance
	{
		key = 0 10 0 0
		key = 17.61146 66.51465 11.29441 11.1219
		key = 25 291.078 58.3814 31.3923
	}
	loadCoefficient
	{
		key = 0 1
		key = 300 50
	}
	brakingTorque = 70
	maxRPM = 300
}

MODULE
{
	name = KFWheel
	wheelName = Link
	colliderName = WC4
	sustravName = DummyLink
	isIdler = false
	hasSuspension = false
	useDirectionCorrector = false
	rotationCorrection = 5
	wheelRotationX = 0
	wheelRotationY = 0
	wheelRotationZ = 1
	susTravAxis = Y	
}

MODULE
{
	name = ModulePropeller
	propellerForce = 25
}

MODULE
{
	name = KFDustFX
	maxDustEmission = 21
}

EFFECTS
{
	WheelEffect
	{
		AUDIO
		{
			channel = Ship
			clip = KerbalFoundries/Sounds/wheel2
			volume = 0.0 0.0
			volume = 0.1 0.2
			volume = 1.0 1.0
			pitch = 0.0 0.2
			pitch = 1.0 0.5
			loop = true
		}
	}
}

MODULE:NEEDS[Scale]
{
    name = TweakScale
    type = KFTrackMedium
}

MODULE
{
	name = KFPrecisionMode
	smoothSpeedMult = 2
}

// Not working right.  Disabled.
//MODULE:NEEDS[Firespitter]
//{
//	// This thing can propel itself through water, but now we need it to float too.
//	// Maybe we could re-use the repulsor water collider stuff to make this happen without the dependency? - Gaalidas
//	name = FSbuoyancy
//	splashFXEnabled = false
//	debugMode = false
//	buoyancyForce = 80
//}
}